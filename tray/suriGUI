#!/usr/bin/env bash
#
# coder: ro0t
# stamp: 0.211113-so


# Enable error checking
set -e
# On Exit kill Parent and all Children
trap "trap - SIGTERM && kill -- -$$ > /dev/null" SIGINT SIGTERM EXIT


# D E B U G G I N G
function D3BUG() {
  if [[ $d3bugging = "True" ]] ; then
    case "$1" in
      "--print")  echo "$2" ;;                      # Print text
      "--error")  echo "ERROR=$2" ;;                # Print error message
      "--func")   echo "Function=${FUNCNAME[1]}" ;; # Print function name
      *)          echo "$_";;                       # Print variable name and value
    esac
  fi
}
export -f D3BUG


# Load default Project variables
#
# Get a script path no mather how you start this project
absolutePath="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"

export _PROJECT_name="suriGUI"                          && D3BUG
export _PROJECT_version="0.1"                           && D3BUG
export _PROJECT_directory="$absolutePath"               && D3BUG
export _PROJECT_resources="$_PROJECT_directory/res"     && D3BUG
export _PROJECT_icon="$_PROJECT_resources/icon-red.png" && D3BUG
export _PROJECT_temp="$_PROJECT_directory/tmp"          && D3BUG
export _PROJECT_pipe="$_PROJECT_temp/suri.pipe"         && D3BUG


# Close project
function closeProject() {
  D3BUG --func
  D3BUG --print "Exit signal received"

  [[ -p $_PROJECT_pipe ]] && rm "$_PROJECT_pipe"
  pkill -f "$_PROJECT_name"

  D3BUG --print "exiting...have a nice trip :)"
  exit 0
}
export -f closeProject



function suriOnClick() {
  D3BUG --func

  # Left click on icon
  echo "clicked"
  #echo "icon:gtk-help" >&3
  #echo "quit" >&3
  exec 3<>$_PROJECT_pipe echo "icon:gtk-help" >&3

}
export -f suriOnClick


function startSURI() {
  D3BUG --func
  # check if already running
    # if yes change icon to green
  # check if iptables are already set
    # if not, redirect all to nfqueue
  # check /etc/suricata/ips.yaml
  # check /etc/suricata/suricata.yaml
  # check when was last update
    # if centuries ago, the offer update
  # check /etc/suricata/rules/suricata.rules
  # start suricata

}
export -f startSURI


function stopSURI() {
  D3BUG --func
  # check if running
    # if not do nothing
  # stop suricata

}
export -f stopSURI



function statusSURI() {
  D3BUG --func
  # check if suri is running
  # check if notification daemon is running
  # check if log file exists
  # check last update timestamp

}
export -f statusSURI



function suriGUI() {
    D3BUG --func

    # Register Project icon
    #xdg-icon-resource install --context mimetypes --size 48 "$_PROJECT_icons" "$_PROJECT_name-logo" \
    #    && D3BUG --print "Icon registered" || D3BUG --error "Icon not registered"

    [[ -p $_PROJECT_pipe ]] && rm "$_PROJECT_pipe"
    mkfifo      "$_PROJECT_pipe"
    exec 3<>     "$_PROJECT_pipe"

    suriTrayMenuList="Start!bash -c startSURI!starred|Stop!bash -c stopSURI|Status!bash -c statusSURI||Settings||Exit!bash -c closeProject"

    # Announce launch
    D3BUG --print "Starting $_PROJECT_name $_PROJECT_version"

    # Execute bash script as $_PROJECT_name
    # exec is here only because "pkill -f $_PROJECT_name"
    exec -a "$_PROJECT_name" \
        yad --notification --no-middle --listen \
            --text="$_PROJECT_name v$_PROJECT_version" \
            --image="$_PROJECT_name-logo" \
            --separator="|" \
            --menu="$suriTrayMenuList" \
            --command="bash -c suriOnClick" <&3
}
export -f suriGUI


# Extra parameters
# ./suriGUI -d
case "$*" in
    # Enable debugging
    "-d")
        export d3bugging="True" && D3BUG
        D3BUG --print "Shell level $SHLVL"
        D3BUG --print "Parent PID $PPID"
        D3BUG --print "Child ID $BASHPID"
    ;;
esac


suriGUI
