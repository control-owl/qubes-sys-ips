#!/usr/bin/env bash
#
# coder: ro0t
# stamp: 0.211217-new-try

# God Mode: On
set -o nounset      # Exit on undefined variable
set -o errexit      # Exit on non-zero status
set -o pipefail     # Pipe return exit status

#notify_cmd='notify-send -t $(( $configTimeout * 1000 ))  "$1" "$2"'
notify_cmd=$(zenity --info --text "$1 $2")



# if [[ -d "$_PROJECT_DIR" && $(cd "$_PROJECT_DIR"; git rev-parse --git-dir 2>/dev/null) ]]; then
if [[ -d "$_PROJECT_DIR" && $(cd "$_PROJECT_DIR"; git rev-parse --git-dir) ]]; then
  repo_name=$(basename "$_PROJECT_DIR" .git)

  d3bug info "Checking for update..."

  cd "$_PROJECT_DIR"
  if git fetch ; then
    changes="$(git fetch | grep -F -- '->' | sed 's/^ [+*=!-] //')"
    while read -r line; do
      case $line in
        *..*)
          commit_range=$(echo "$line" | awk '{ print $1 }')
          branch_name=$(echo "$line" | awk '{ print $2 }')
          commit_messages=$(git log $commit_range --pretty=format:'%s (%an)')
          notify_cmd "New commits in $repo_name/$branch_name" "$commit_messages"
          ;;
        *new\ branch*)
          branch_name=$(echo "$line" | awk '{ print $3 }')
          notify_cmd "New branch" "$repo_name/$branch_name"
          ;;
        *new\ tag*)
          tag_name=$(echo "$line" | awk '{ print $3 }')
          notify_cmd "New tag" "$repo_name/$tag_name"
          ;;
      esac
    done <<< "$changes"
  else
    notify_cmd info "No update found. You are using latest version."
  fi
fi
notify-send "Done"
