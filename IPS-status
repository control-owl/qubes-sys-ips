#!/usr/bin/env bash
# coder: ro0t


set -o nounset      # Exit on undefined variable
set -o errexit      # Exit on non-zero status
set -o pipefail     # Pipe return exit status


trap 'echo "[ERROR] $BASH_COMMAND" failed with error code $?' ERR


export defLoc="/opt/suriGUI"
sudo chown user:user "$defLoc" -R


if [[ ! -d "$defLoc" ]]
then
  if ! mkdir -p "$defLoc"
  then
    echo "[ERROR] Can not create directory: $defLoc"
    exit 1
  fi
fi

pipe="$defLoc/tmp/status.pipe"


if [[ -e $pipe ]]
then
  if ! rm "$pipe"
  then
    exit 1
  fi
fi



mkfifo "$pipe"
exec 5<> "$pipe"


function iconManager()
{
#  export statusIcon

  xdg-icon-resource install --context mimetypes --size 48 "$defLoc/res/icons/suricata/inactive.png" "Suricata-Inactive"
  xdg-icon-resource install --context mimetypes --size 48 "$defLoc/res/icons/suricata/active.png" "Suricata-Active"
}

iconManager

function controlSuricataService()
{

  # stop | start
  local action="${1:-status}"

  if ! sudo systemctl "$action" suricata #&>/dev/null
  then
    echo "[ERROR] Can not control Suricata service. $action is not working"
  fi
}

export -f controlSuricataService

function suricataStatus()
{
  if systemctl is-active --quiet suricata
  then
    export suricataStatus="Suricata-Active"
    menu="Stop IPS!bash -c 'controlSuricataService stop'"
  else
    export suricataStatus="Suricata-Inactive"
    menu="Start IPS!bash -c 'controlSuricataService start'"
  fi

  menu+="|Restart IPS!bash -c 'controlSuricataService restart'"
  menu+="||Hide icon!quit"

  exec 5<>$pipe echo "menu:$menu" >&5 &
  exec 5<>$pipe echo "icon:$suricataStatus" >&5 &
}

suricataStatus










function startIPSmonitor()
{
  yad \
    --notification\
    --no-middle \
    --listen \
    --text="tooltip" \
    --image="$suricataStatus" \
    --separator="|" \
    --menu="Hide icon!quit" \
    --command="xterm -e 'systemctl status suricata'" \
  <&5 & &>/dev/null
}


startIPSmonitor




while :
do
  #[[ ! -f "$suricataStatus" ]] && break
  suricataStatus
  sleep 5
done #&>/dev/null


echo "End of script, but not IPS !!!"
